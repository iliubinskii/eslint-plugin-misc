import { o } from "real-fns";
export declare const tsMisc: o.PrefixKeys<{
    "types/no-Writable": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "types/no-ts-toolbelt": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "types/prefer-IndexedObject": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "types/prefer-IndexedRecord": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "types/prefer-NumStr": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "types/prefer-PartialRecord": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "types/prefer-WritableIndexedObject": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "types/prefer-WritableRecord": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "types/prefer-undefined-shorthand": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "jest/prefer-mockCallsToBe": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/require-jsdoc": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/require-jsdoc").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/require-jsdoc").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/prefer-readonly-map": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/prefer-readonly-set": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/array/fromIterable-arg-type": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/array/mixedFrom-include-array": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/array/mixedFrom-include-non-array": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/array/prefer-clone": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/array/prefer-first": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/array/prefer-fromIterable": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/array/prefer-reverse": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/array/prefer-second": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/array/prefer-sort": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/array/prefer-third": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/array/prefer-truncate": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/converters/prefer-number": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/converters/prefer-string": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/array-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/array-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/boolean-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/boolean-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/callable-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/callable-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/empty-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/empty-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/enumeration-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/false-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/indexedObject-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/indexedObject-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/instanceOf-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/map-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/not-empty-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/not-empty-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/null-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/null-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/numStr-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/numStr-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/number-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/number-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/object-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/object-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/require-object-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/set-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/string-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/string-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/symbol-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/symbol-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/true-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/tuple-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/undefined-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/guards/undefined-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/json/prefer-json": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/object/prefer-clone": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/object/no-array-arg": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/object/no-get": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/object/no-set": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/object/no-unfreeze": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/object/prefer-assign": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/object/prefer-entries": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/object/prefer-getPrototypeOf": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/object/prefer-hasOwnProp": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/object/prefer-keys": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/object/prefer-omitKeys": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/object/prefer-values": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/no-evaluate-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/prefer-defineFn": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/prefer-evaluate": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "functions/require-return-in-defineFn": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../core/base/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
}, "ts-misc/">;
//# sourceMappingURL=index.d.ts.map