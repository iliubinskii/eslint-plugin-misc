import { o } from "@skylib/functions";
export declare const array: o.PrefixKeys<{
    "fromIterable-arg-type": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../typescript/core/no-restricted-syntax").MessageId, import("../../../utils/create-rule.internal").PartialOptionsArray<import("../../../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "mixedFrom-include-array": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../typescript/core/no-restricted-syntax").MessageId, import("../../../utils/create-rule.internal").PartialOptionsArray<import("../../../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "mixedFrom-include-non-array": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../typescript/core/no-restricted-syntax").MessageId, import("../../../utils/create-rule.internal").PartialOptionsArray<import("../../../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-clone": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, import("../../../utils/create-rule.internal").PartialOptionsArray<import("../../../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-first": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, import("../../../utils/create-rule.internal").PartialOptionsArray<import("../../../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-fromIterable": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, import("../../../utils/create-rule.internal").PartialOptionsArray<import("../../../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-reverse": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../typescript/core/no-restricted-syntax").MessageId, import("../../../utils/create-rule.internal").PartialOptionsArray<import("../../../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-second": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, import("../../../utils/create-rule.internal").PartialOptionsArray<import("../../../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-sort": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../typescript/core/no-restricted-syntax").MessageId, import("../../../utils/create-rule.internal").PartialOptionsArray<import("../../../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-third": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, import("../../../utils/create-rule.internal").PartialOptionsArray<import("../../../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-truncate": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../typescript/core/no-restricted-syntax").MessageId, import("../../../utils/create-rule.internal").PartialOptionsArray<import("../../../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
}, "array/">;
//# sourceMappingURL=index.d.ts.map