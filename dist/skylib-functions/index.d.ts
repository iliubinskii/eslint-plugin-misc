import { o } from "@skylib/functions";
export declare const skylibFunctions: {
    readonly jest: o.PrefixKeys<o.PrefixKeys<{
        "prefer-mockCallsToBe": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    }, "jest/">, "functions/">;
    readonly misc: o.PrefixKeys<{
        readonly "types/no-Writable": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "types/no-ts-toolbelt": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "types/prefer-IndexedObject": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "types/prefer-IndexedRecord": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "types/prefer-NumStr": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "types/prefer-PartialRecord": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "types/prefer-WritableIndexedObject": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "types/prefer-WritableRecord": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "types/prefer-undefined-shorthand-literal": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "types/prefer-undefined-shorthand-type": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "types/prefer-undefined-shorthand-typeName": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "reflect/no-get": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "reflect/no-set": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "reflect/prefer-reflect": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "program-flow/prefer-clearInterval": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "program-flow/prefer-clearTimeout": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "program-flow/prefer-setInterval": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "program-flow/prefer-setTimeout": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "object/prefer-clone": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "object/no-array-arg": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "object/no-get": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "object/no-set": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "object/no-unfreeze": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "object/prefer-assign": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "object/prefer-entries": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "object/prefer-getPrototypeOf": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "object/prefer-hasOwnProp": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "object/prefer-keys": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "object/prefer-values": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "json/prefer-json": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/array-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/array-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/boolean-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/boolean-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/callable-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/callable-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/empty-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/empty-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/enumeration-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/false-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/indexedObject-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/indexedObject-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/instanceOf-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/map-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/not-empty-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/not-empty-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/null-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/null-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/numStr-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/numStr-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/number-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/number-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/object-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/object-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/require-object-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/set-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/string-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/string-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/symbol-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/symbol-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/true-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/tuple-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/undefined-always-false": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "guards/undefined-always-true": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "converters/prefer-number": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "converters/prefer-string": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "array/fromIterable-arg-type": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "array/mixedFrom-include-array": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "array/mixedFrom-include-non-array": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "array/prefer-clone": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "array/prefer-first": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "array/prefer-fromIterable": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "array/prefer-reverse": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "array/prefer-second": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "array/prefer-sort": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "array/prefer-third": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "array/prefer-truncate": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../typescript/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../typescript/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "no-evaluate-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "prefer-ReadonlyMap": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "prefer-ReadonlySet": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "prefer-defineFn": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "prefer-evaluate": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "require-jsdoc": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/require-jsdoc").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/require-jsdoc").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "require-return-in-defineFn": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    }, "functions/">;
};
//# sourceMappingURL=index.d.ts.map