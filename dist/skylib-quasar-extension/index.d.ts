import { o } from "@skylib/functions";
export declare const skylibQuasarExtension: {
    readonly extras: o.PrefixKeys<o.PrefixKeys<{
        "check-Props-extends": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "check-Slots-extends": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "no-OwnProps-extends": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "no-OwnSlots-extends": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "no-empty-interfaces": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "prefer-OwnProps": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "prefer-OwnSlots": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    }, "extras/">, "quasar-extension/">;
    readonly jest: o.PrefixKeys<o.PrefixKeys<{
        "prefer-findQuasarComponent": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "prefer-testComponents": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    }, "jest/">, "quasar-extension/">;
    readonly misc: o.PrefixKeys<{
        readonly "no-computed-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "no-ref-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "no-ref-undefined": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        readonly "require-ref-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    }, "quasar-extension/">;
    readonly vue: o.PrefixKeys<o.PrefixKeys<{
        "template/no-mixed-classes": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-btn": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-card": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-card-actions": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-card-section": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-expansion-item": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-field": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-form": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-input": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-item": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-knob": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-menu": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-option-group": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-popup-proxy": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-select": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-toggle": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/no-q-tooltip": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/prefer-label-prop": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "template/prefer-lang-var": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "script/consistent-expose-arg": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "script/no-global-icons": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "script/no-global-lang": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "script/require-validateEmit-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
        "script/require-validateProps-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, import("../utils/create-rule.internal").PartialOptionsArray<import("../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    }, "vue/">, "quasar-extension/">;
};
//# sourceMappingURL=index.d.ts.map