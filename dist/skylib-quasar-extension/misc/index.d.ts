export declare const misc: {
    readonly "no-computed-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/no-restricted-syntax").MessageId, import("../../utils/create-rule.internal").PartialOptionsArray<import("../../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "no-ref-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/no-restricted-syntax").MessageId, import("../../utils/create-rule.internal").PartialOptionsArray<import("../../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "no-ref-undefined": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/no-restricted-syntax").MessageId, import("../../utils/create-rule.internal").PartialOptionsArray<import("../../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "require-ref-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/no-restricted-syntax").MessageId, import("../../utils/create-rule.internal").PartialOptionsArray<import("../../misc/core/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
};
//# sourceMappingURL=index.d.ts.map