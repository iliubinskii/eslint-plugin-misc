import { o } from "typescript-misc";
export declare const eslintrc: o.PrefixKeys<{
    "no-disable": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../core/base/no-restricted-syntax").MessageId, import("../../utils/create-rule.internal").PartialOptionsArray<import("../../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "no-rules": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../core/base/no-restricted-syntax").MessageId, import("../../utils/create-rule.internal").PartialOptionsArray<import("../../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "no-temp": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../core/base/no-restricted-syntax").MessageId, import("../../utils/create-rule.internal").PartialOptionsArray<import("../../core/base/no-restricted-syntax").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "sort-synonyms": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../utils/sort.internal").MessageId | import("../../core/base/sort-array").MessageId, import("../../utils/create-rule.internal").PartialOptionsArray<import("../../core/base/sort-array").Options, object, never>, import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
}, "eslintrc/">;
//# sourceMappingURL=index.d.ts.map